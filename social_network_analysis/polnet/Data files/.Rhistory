nodes <- read.csv("Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
links <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
head(nodes)
head(links)
nrow(nodes)
length(unique(node$id))
length(unique(nodes$id))
nrow(links); nrow(unique(links[,c("from", "to")]))
links[,3]
links[,-3]
aggregate(links[,3], links[,-3], sum)
links <- aggregate(links[,3], links[,-3], sum)
links[order(links$from, links$to), ]
links$from
links$to
order(links$from, links$to)
links <- links[order(links$from, links$to),]
colnames(links)[4] <- "weight"
rownames(links) <- NULL
head(links)
nodes2 <- read.csv("Dataset2-Media-User-Example-NODES.csv", header=T, as.is=T)
links2 <- read.csv("Dataset2-Media-User-Example-EDGES.csv", header=T, row.names=1)
head(nodes2)
head(links2)
as.matrix(links2)
links2 <- as.matrix(links2)
dim(links2)
dim(nodes2)
q()
ls()
links
head(links)
?aggregate
examples(aggregate)
example(aggregate)
aggregate(state.x77, list(Region = state.region), mean)
head(state.x77)
state.region
aggregate(state.x77, list(Region = state.region), mean)
list
ls()
rm(ag)
ls()
rm(c('by1', 'by2', 'fby1', 'fby2', 'testDF'))
ls()
rm(list("by1", "by2", "fby1", "fby2"))
rm(list = c("by1", "by2", "fby1", "fby2"))
ls()
rm("testDF")
ls()
links
head(links)
getwd()
head(read.csv("Dataset2-Media-User-Example-NODES.csv", header=T, as.is=T)
)
head(read.csv("Dataset2-Media-User-Example-EDGES.csv", header=T, row.names=1)
)
dim(links2)
dim(read.csv("Dataset2-Media-User-Example-EDGES.csv", header=T, row.names=1))
dim(nodes2)
nodes2
links2
links
head(links)
nodes
links
head(nodes)
head(links)
E(net)
# Use igraph to convert the data into an igraph network object
# plotting with igraph http://igraph.org/  
library('igraph')
# take two dataframes, links and nodes as d and vertices
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# d (the edges of the network) takes IDs for from and to
# while assigning attributes type and weight to the new object
#       from  to      type weight
#     1  s01 s02 hyperlink     22
#     2  s01 s03 hyperlink     22
#     3  s01 s04 hyperlink     21
#     4  s01 s15   mention     20
#
# vertices take column of node IDs and the rest as node attributes
E(net)
V(net)
E(net)$type
V(net)$media
V(net)[media=="BBC"]
E(net)[type=="mention"]
net[1,]
net[5,7]
as_edgelist(net, names=T)
as_adjacency_matrix(net, attr="weight")
as_data_frame(net, what="edges")
head(as_data_frame(net, what="edges"))
head(as_data_frame(net, what="vertices"))
plot(net)
q()
ls()
links
head(links)
head(nodes)
ls()
# read matrix links2
net2 <- graph_from_incidence_matrix(links2)
# table(V(net2)$type) # node attribute type FALSE/TRUE for vertex mode
#
#    FALSE  TRUE
#       10    20
## plotting two-mode networks
plot(net2, vertex.label=NA)
library('igraph')
# read matrix links2
net2 <- graph_from_incidence_matrix(links2)
# table(V(net2)$type) # node attribute type FALSE/TRUE for vertex mode
#
#    FALSE  TRUE
#       10    20
## plotting two-mode networks
plot(net2, vertex.label=NA)
install.packages('png)
install.packages('png')
install.packages('png')
q()
history()
history(max.show=10)
history(max.show=10, reverse=T)
history(max.show=10, reverse=F)
history(max.show=10, pattern='install')
history(reverse=T)
q()
